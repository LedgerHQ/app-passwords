name: Compilation & tests

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  unittesting:
    name: C unit testing
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Install cmocka
        run: |
          sudo apt update
          sudo apt install libcmocka-dev lcov libbsd-dev
      - name: Compile the tests
        run: |
          cd tests/unit/
          rm -rf build/
          cmake -B build -H.
          make -C build
      - name: Run the tests
        run: |
          cd tests/unit/
          CTEST_OUTPUT_ON_FAILURE=1 make -C build test
      - name: Generate code coverage
        run: |
          cd tests/unit/
          lcov --directory . -b "$(realpath build/)" --capture --initial -o coverage.base
          lcov --rc lcov_branch_coverage=1 --directory . -b "$(realpath build/)" --capture -o coverage.capture
          lcov --directory . -b "$(realpath build/)" --add-tracefile coverage.base --add-tracefile coverage.capture -o coverage.info
          lcov --directory . -b "$(realpath build/)" --remove coverage.info '*/unit-tests/*' -o coverage.info
          genhtml coverage.info -o coverage
      - uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: tests/unit/coverage

  build:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      flags: "TESTING=1 POPULATE=1"
      upload_app_binaries_artifact: apps

  job_test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Download app binary
        uses: actions/download-artifact@v3
        with:
          name: apps
          path: /tmp/apps/
      - name: Gather binaries at the right places
        run: |
          mkdir -p tests/functional/elfs
          mv /tmp/apps/nanos/bin/app.elf tests/functional/elfs/passwords-nanos.elf
          mv /tmp/apps/nanos2/bin/app.elf tests/functional/elfs/passwords-nanosp.elf
          mv /tmp/apps/nanox/bin/app.elf tests/functional/elfs/passwords-nanox.elf
          mv /tmp/apps/stax/bin/app.elf tests/functional/elfs/passwords-stax.elf

      - name: Install APT dependencies
        run: sudo apt-get update && sudo apt-get install -y qemu-user-static tesseract-ocr libtesseract-dev
      - name: Install Python dependencies
        run: pip install --extra-index-url https://test.pypi.org/simple/ -r tests/functional/requirements.txt
      - name: Run test
        run: pytest --tb=short -v tests/functional
      - name: Upload Speculos log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: speculos-log
          path: speculos.log
